<?xml version="1.0"?>
<launch>

  <arg name="quad_name" default="hummingbird" />



  <!-- rotors_gazebo -->
  <arg name="mav_name" default="$(arg quad_name)"/>
  <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo"/>
  <arg name="world_name" default="$(find rotors_gazebo)/worlds/basic.world"/>
  <arg name="x_init" default="0"/>
  <arg name="y_init" default="0"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="paused" value="true"/>
  <arg name="gui" value="true"/>
  <arg name="use_ground_truth" value="true"/>
  <arg name="verbose" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="custom_models" default=""/>

  <!-- Gazebo stuff to spawn the world !-->
  <env name="GAZEBO_MODEL_PATH" 
      value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models:$(arg custom_models)"/>
  <env name="GAZEBO_RESOURCE_PATH" 
      value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!-- RotorS stuff to spawn the quadrotor !-->
  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(arg model)" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="x" value="$(arg x_init)" />
      <arg name="y" value="$(arg y_init)" />
    </include>
  </group>

  <!-- RPG stuff !-->
  <group ns="$(arg quad_name)" >

    <group if="$(arg use_ground_truth)">
      <node pkg="rpg_rotors_interface" type="rpg_rotors_interface" 
          name="rpg_rotors_interface" output="screen" >
        <rosparam file="$(find rpg_rotors_interface)/parameters/rpg_rotors_interface.yaml" />
        
        <remap from="odometry" to="ground_truth/odometry" />
        <remap from="rpg_rotors_interface/arm" to="bridge/arm" />
      </node>
    </group>

  </group>

</launch>